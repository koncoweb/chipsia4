// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ijbX9dfpBRbW1FGSgs1NJo
// Component: mXQ-qJEh5Wo

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: 38U0KJJ_izLvF0/component
import Footer2 from "../../Footer2"; // plasmic-import: mjWkbfcaecO/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_chipsia.module.css"; // plasmic-import: ijbX9dfpBRbW1FGSgs1NJo/projectcss
import sty from "./PlasmicPrivacyPolicy.module.css"; // plasmic-import: mXQ-qJEh5Wo/css

createPlasmicElementProxy;

export type PlasmicPrivacyPolicy__VariantMembers = {};
export type PlasmicPrivacyPolicy__VariantsArgs = {};
type VariantPropType = keyof PlasmicPrivacyPolicy__VariantsArgs;
export const PlasmicPrivacyPolicy__VariantProps = new Array<VariantPropType>();

export type PlasmicPrivacyPolicy__ArgsType = {};
type ArgPropType = keyof PlasmicPrivacyPolicy__ArgsType;
export const PlasmicPrivacyPolicy__ArgProps = new Array<ArgPropType>();

export type PlasmicPrivacyPolicy__OverridesType = {
  root?: p.Flex<"div">;
  freeBox?: p.Flex<"div">;
  navBar?: p.Flex<typeof NavBar>;
  pageBanner?: p.Flex<"div">;
  mainSection?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  column?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  h2?: p.Flex<"h2">;
  footer2?: p.Flex<typeof Footer2>;
};

export interface DefaultPrivacyPolicyProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPrivacyPolicy__RenderFunc(props: {
  variants: PlasmicPrivacyPolicy__VariantsArgs;
  args: PlasmicPrivacyPolicy__ArgsType;
  overrides: PlasmicPrivacyPolicy__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicPrivacyPolicy.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPrivacyPolicy.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPrivacyPolicy.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicPrivacyPolicy.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicPrivacyPolicy.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicPrivacyPolicy.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicPrivacyPolicy.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicPrivacyPolicy.pageMetadata.ogImageSrc}
        />
        <link
          ref="canonical"
          href={PlasmicPrivacyPolicy.pageMetadata.canonical}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <NavBar
              data-plasmic-name={"navBar"}
              data-plasmic-override={overrides.navBar}
              className={classNames("__wab_instance", sty.navBar)}
            />
          </div>
          <div
            data-plasmic-name={"pageBanner"}
            data-plasmic-override={overrides.pageBanner}
            className={classNames(projectcss.all, sty.pageBanner)}
          />

          <div
            data-plasmic-name={"mainSection"}
            data-plasmic-override={overrides.mainSection}
            className={classNames(projectcss.all, sty.mainSection)}
          >
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div
                data-plasmic-name={"column"}
                data-plasmic-override={overrides.column}
                className={classNames(projectcss.all, sty.column)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Privacy Policy"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Kg6L
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h2
                        data-plasmic-name={"h2"}
                        data-plasmic-override={overrides.h2}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Privacy Policy for Chipsia"}
                          </span>
                        </React.Fragment>
                      </h2>
                    }
                    <React.Fragment>
                      {
                        "\nAt Chipsia, accessible from [insert website here], one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Chipsia and how we use it.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__foFk1
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Log Files"}
                          </span>
                        </React.Fragment>
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nChipsia follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services\u2019 analytics. The information collected by log files includes internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users\u2019 movement on the website, and gathering demographic information.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__iq4Jm
                        )}
                      >
                        {"User Submitted Form"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nWe collect information from you when you fill out a form on our site. This information is collected with your full consent and is used to improve our services and your experience on our site.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__xhSmo
                        )}
                      >
                        {"Cookies and Web Beacons"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nLike any other website, Chipsia uses \u2018cookies\u2019. These cookies are used to store information including visitors\u2019 preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users\u2019 experience by customizing our web page content based on visitors\u2019 browser type and/or other information.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__bdvMr
                        )}
                      >
                        {"Privacy Policies"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nYou may consult this list to find the Privacy Policy for each of the advertising partners of Chipsia.\n\nThird-party ad servers or ad networks use technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Chipsia, which are sent directly to users\u2019 browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n\nNote that Chipsia has no access to or control over these cookies that are used by third-party advertisers.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__eR1Mm
                        )}
                      >
                        {"Third-Party Privacy Policies"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nChipsia\u2019s Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.\n\nYou can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers\u2019 respective websites.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__gaGaE
                        )}
                      >
                        {"Children\u2019s Information"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nAnother part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n\nChipsia does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___7Jdhk
                        )}
                      >
                        {"\nOnline Privacy Policy Only"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nThis Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Chipsia. This policy is not applicable to any information collected offline or via channels other than this website.\n\n"
                      }
                    </React.Fragment>
                    {
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__dVeCr
                        )}
                      >
                        {"Consent"}
                      </h3>
                    }
                    <React.Fragment>
                      {
                        "\nBy using our website, you hereby consent to our Privacy Policy and agree to its Terms and Conditions."
                      }
                    </React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___60OoV
                  )}
                >
                  {"\n\n\n"}
                </div>
              </div>
            </div>
          </div>
          <Footer2
            data-plasmic-name={"footer2"}
            data-plasmic-override={overrides.footer2}
            className={classNames("__wab_instance", sty.footer2)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "freeBox",
    "navBar",
    "pageBanner",
    "mainSection",
    "columns",
    "column",
    "h1",
    "h2",
    "footer2"
  ],
  freeBox: ["freeBox", "navBar"],
  navBar: ["navBar"],
  pageBanner: ["pageBanner"],
  mainSection: ["mainSection", "columns", "column", "h1", "h2"],
  columns: ["columns", "column", "h1", "h2"],
  column: ["column", "h1", "h2"],
  h1: ["h1"],
  h2: ["h2"],
  footer2: ["footer2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
  navBar: typeof NavBar;
  pageBanner: "div";
  mainSection: "div";
  columns: "div";
  column: "div";
  h1: "h1";
  h2: "h2";
  footer2: typeof Footer2;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPrivacyPolicy__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPrivacyPolicy__VariantsArgs;
    args?: PlasmicPrivacyPolicy__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPrivacyPolicy__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPrivacyPolicy__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPrivacyPolicy__ArgProps,
          internalVariantPropNames: PlasmicPrivacyPolicy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPrivacyPolicy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPrivacyPolicy";
  } else {
    func.displayName = `PlasmicPrivacyPolicy.${nodeName}`;
  }
  return func;
}

export const PlasmicPrivacyPolicy = Object.assign(
  // Top-level PlasmicPrivacyPolicy renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    navBar: makeNodeComponent("navBar"),
    pageBanner: makeNodeComponent("pageBanner"),
    mainSection: makeNodeComponent("mainSection"),
    columns: makeNodeComponent("columns"),
    column: makeNodeComponent("column"),
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    footer2: makeNodeComponent("footer2"),

    // Metadata about props expected for PlasmicPrivacyPolicy
    internalVariantProps: PlasmicPrivacyPolicy__VariantProps,
    internalArgProps: PlasmicPrivacyPolicy__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Online Privacy Policy of Chipsia",
      description:
        "This Privacy Policy document contains types of information that is collected and recorded by Chipsia and how we use it",
      ogImageSrc:
        "https://site-assets.plasmic.app/54f3ce18d37d548646a3665708ddddc8.jpg",
      canonical: "https://www.chipsia.com/privacy-policy"
    }
  }
);

export default PlasmicPrivacyPolicy;
/* prettier-ignore-end */
