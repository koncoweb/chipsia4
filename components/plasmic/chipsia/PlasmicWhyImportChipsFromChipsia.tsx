// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ijbX9dfpBRbW1FGSgs1NJo
// Component: gZIrgP8qyUSd

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: 38U0KJJ_izLvF0/component
import ProductCard from "../../ProductCard"; // plasmic-import: be4gyluQ_9OJzR/component
import Button from "../../Button"; // plasmic-import: z08NHQzGDufhl_/component
import Rating from "../../Rating"; // plasmic-import: JRf21XH4cTf7V-/component
import EmojiValueProps from "../../EmojiValueProps"; // plasmic-import: pVPTu88xjlQJ6D/component
import Value from "../../Value"; // plasmic-import: 3bRucgJCclHNht/component
import Footer from "../../Footer"; // plasmic-import: TjbIATQS4AqoQO/component

import { useScreenVariants as useScreenVariantsbvEuI4Yp87Tgs } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BV_euI4yp87tgs/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_chipsia.module.css"; // plasmic-import: ijbX9dfpBRbW1FGSgs1NJo/projectcss
import sty from "./PlasmicWhyImportChipsFromChipsia.module.css"; // plasmic-import: gZIrgP8qyUSd/css

import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: vIBh7hkedAKVLS/icon
import PlaneIcon from "./icons/PlasmicIcon__Plane"; // plasmic-import: K0_Ms7xwxMqw9s/icon
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: PS6DVWNrsATME2/icon
import DocumentIcon from "./icons/PlasmicIcon__Document"; // plasmic-import: nmoxyqKZ1SSwmZ/icon
import LockIcon from "./icons/PlasmicIcon__Lock"; // plasmic-import: CO7fMjG8L3EKiN/icon

createPlasmicElementProxy;

export type PlasmicWhyImportChipsFromChipsia__VariantMembers = {};
export type PlasmicWhyImportChipsFromChipsia__VariantsArgs = {};
type VariantPropType = keyof PlasmicWhyImportChipsFromChipsia__VariantsArgs;
export const PlasmicWhyImportChipsFromChipsia__VariantProps =
  new Array<VariantPropType>();

export type PlasmicWhyImportChipsFromChipsia__ArgsType = {};
type ArgPropType = keyof PlasmicWhyImportChipsFromChipsia__ArgsType;
export const PlasmicWhyImportChipsFromChipsia__ArgProps =
  new Array<ArgPropType>();

export type PlasmicWhyImportChipsFromChipsia__OverridesType = {
  root?: p.Flex<"main">;
  navBar?: p.Flex<typeof NavBar>;
  container4?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  container?: p.Flex<"div">;
  productCard?: p.Flex<typeof ProductCard>;
  productCard2?: p.Flex<typeof ProductCard>;
  h2?: p.Flex<"h2">;
  link?: p.Flex<"a"> & Partial<LinkProps>;
  emojiValueProps?: p.Flex<typeof EmojiValueProps>;
  columns?: p.Flex<"div">;
  container6?: p.Flex<"div">;
  productCard13?: p.Flex<typeof ProductCard>;
  productCard14?: p.Flex<typeof ProductCard>;
  productCard15?: p.Flex<typeof ProductCard>;
  productCard16?: p.Flex<typeof ProductCard>;
  productCard17?: p.Flex<typeof ProductCard>;
  productCard18?: p.Flex<typeof ProductCard>;
  productCard19?: p.Flex<typeof ProductCard>;
  productCard20?: p.Flex<typeof ProductCard>;
  productCard21?: p.Flex<typeof ProductCard>;
  productCard22?: p.Flex<typeof ProductCard>;
  productCard23?: p.Flex<typeof ProductCard>;
  productCard24?: p.Flex<typeof ProductCard>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultWhyImportChipsFromChipsiaProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicWhyImportChipsFromChipsia__RenderFunc(props: {
  variants: PlasmicWhyImportChipsFromChipsia__VariantsArgs;
  args: PlasmicWhyImportChipsFromChipsia__ArgsType;
  overrides: PlasmicWhyImportChipsFromChipsia__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const stateSpecs = React.useMemo(
    () => [
      {
        path: "productCard.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard2.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard13.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard14.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard15.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard16.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard17.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard18.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard19.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard20.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard21.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard22.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard23.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "productCard24.entryidvar",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries,
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbvEuI4Yp87Tgs()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">
          {PlasmicWhyImportChipsFromChipsia.pageMetadata.title}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicWhyImportChipsFromChipsia.pageMetadata.ogImageSrc}
        />
        <link
          ref="canonical"
          href={PlasmicWhyImportChipsFromChipsia.pageMetadata.canonical}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <main
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <section className={classNames(projectcss.all, sty.section__h1VhX)}>
            <div
              data-plasmic-name={"container4"}
              data-plasmic-override={overrides.container4}
              className={classNames(projectcss.all, sty.container4)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__xSePr)}>
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Why Chipsia ?"}
                </h1>
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              hasGap={true}
              className={classNames(projectcss.all, sty.container)}
            >
              {true ? (
                <ProductCard
                  data-plasmic-name={"productCard"}
                  data-plasmic-override={overrides.productCard}
                  className={classNames("__wab_instance", sty.productCard)}
                  img={{
                    src: "/plasmic/chipsia/images/shoe18.png",
                    fullWidth: 840,
                    fullHeight: 840,
                    aspectRatio: undefined
                  }}
                  onEntryidvarChange={p.generateStateOnChangeProp($state, [
                    "productCard",
                    "entryidvar"
                  ])}
                  rating={
                    <Rating
                      className={classNames(
                        "__wab_instance",
                        sty.rating__y52N0
                      )}
                      rating={"five" as const}
                    />
                  }
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                      submitsForm={true}
                    >
                      {"New"}
                    </Button>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7B83M
                    )}
                  >
                    {"ULTRABOOST DNA 1.0 SHOES"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zr3KV
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>
              ) : null}
              {true ? (
                <ProductCard
                  data-plasmic-name={"productCard2"}
                  data-plasmic-override={overrides.productCard2}
                  className={classNames("__wab_instance", sty.productCard2)}
                  img={{
                    src: "/plasmic/chipsia/images/shoe19.png",
                    fullWidth: 864,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                  onEntryidvarChange={p.generateStateOnChangeProp($state, [
                    "productCard2",
                    "entryidvar"
                  ])}
                  rating={
                    <Rating
                      className={classNames(
                        "__wab_instance",
                        sty.rating__rnOa1
                      )}
                      rating={"threeHalf" as const}
                    />
                  }
                  tags={
                    <Button
                      colors={"lightGray" as const}
                      size={"small" as const}
                      submitsForm={true}
                    >
                      {"New"}
                    </Button>
                  }
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tiBfN
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2
                      )}
                    >
                      {"Why Choose Chipsia as Your Indonesian Chips Supplier?"}
                    </h2>
                  }
                  <React.Fragment>
                    {
                      "\nAre you looking for a reliable and affordable supplier of Indonesian chips? Look no further than Chipsia! Here are just a few reasons why you should choose us as your go-to source for delicious Indonesian snacks:\n\n"
                    }
                  </React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__zFh8D
                      )}
                    >
                      {"Best Prices"}
                    </h3>
                  }
                  <React.Fragment>
                    {
                      "At Chipsia, we pride ourselves on offering the best prices for Indonesian chips products. We work hard to keep our costs low so that we can pass the savings on to you. Whether you\u2019re a small business or a large corporation, you\u2019ll find that our prices are unbeatable.\n\n"
                    }
                  </React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___6Vc
                      )}
                    >
                      {"Easy Importing"}
                    </h3>
                  }
                  <React.Fragment>
                    {
                      "Importing products from another country can be a daunting task, but with Chipsia, it\u2019s easy. We handle all the details, from obtaining export licenses to reserving space for shipment. All you have to do is place your order and wait for your delicious chips to arrive. Look our "
                    }
                  </React.Fragment>
                  {
                    <p.PlasmicLink
                      data-plasmic-name={"link"}
                      data-plasmic-override={overrides.link}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link
                      )}
                      component={Link}
                      href={
                        "https://www.chipsia.com/product/export-procedures" as const
                      }
                      platform={"nextjs"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{
                            fontStyle: "italic",
                            fontWeight: 700,
                            color: "#000000"
                          }}
                        >
                          {"Export procedures"}
                        </span>
                      </React.Fragment>
                    </p.PlasmicLink>
                  }
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontStyle: "italic",
                      fontWeight: 700,
                      color: "#000000"
                    }}
                  >
                    {" "}
                  </span>
                  <React.Fragment>{"\n\n"}</React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__efzh1
                      )}
                    >
                      {"High Quality"}
                    </h3>
                  }
                  <React.Fragment>
                    {
                      "Of course, low prices and easy importing wouldn\u2019t mean much if our products weren\u2019t top-notch. At Chipsia, we use only the finest ingredients and adhere to strict quality control standards to ensure that our chips are the best they can be.\n\n"
                    }
                  </React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__cFk1
                      )}
                    >
                      {"Great Selection"}
                    </h3>
                  }
                  <React.Fragment>
                    {
                      "We offer a wide variety of Indonesian chips, so you\u2019re sure to find something that suits your taste. From spicy to sweet, we have it all.\n\n"
                    }
                  </React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__m07My
                      )}
                    >
                      {"Original Methods"}
                    </h3>
                  }
                  <React.Fragment>
                    {
                      " At Chipsia, we use original methods in our production process to ensure that our chips are healthy and have an authentic traditional taste. You won\u2019t find any artificial flavors or preservatives here - just delicious, wholesome snacks.\n\nIn short, if you\u2019re looking for a reliable and affordable supplier of Indonesian chips, look no further than Chipsia. Contact us today to learn more about our products and how we can help you bring the taste of Indonesia to your customers."
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
            </p.Stack>
          </section>
          <EmojiValueProps
            data-plasmic-name={"emojiValueProps"}
            data-plasmic-override={overrides.emojiValueProps}
            className={classNames("__wab_instance", sty.emojiValueProps)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__bvr4G)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___2UtdQ
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___2B90X
                          )}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                      submitsForm={true}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__uRtNy)}
                  icon={
                    <PlaneIcon
                      className={classNames(projectcss.all, sty.svg__nNs2R)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dFTq9
                    )}
                  >
                    {"worldwide shipping to any country"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Rmx
                    )}
                  >
                    {
                      "We are Ready to Ship all of our products Worldwide by land, sea, and air. our packaging guarantee product is in prime quality after you received "
                    }
                  </div>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__oItkl)}>
                <Value
                  children2={
                    <Button
                      className={classNames("__wab_instance", sty.button__qHPc)}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__dR9Vz)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                      submitsForm={true}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__fgG6)}
                  icon={
                    <DocumentIcon
                      className={classNames(projectcss.all, sty.svg__yC9D)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tb3N
                    )}
                  >
                    {"Your satisfaction guaranteed"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__klql
                    )}
                  >
                    {
                      "Our export process is professional so you do not have to worry about product quality, we are experienced in the export process"
                    }
                  </div>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__lsjoP)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ne9Lu
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___270E5
                          )}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                      submitsForm={true}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__znhEo)}
                  icon={
                    <LockIcon
                      className={classNames(projectcss.all, sty.svg__pUrDe)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iAcVc
                    )}
                  >
                    {"Secure and easy payments process"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pFjm
                    )}
                  >
                    {
                      "Don't worry about payment, we accept many forms of international payment so you can fulfill your demand without the high cost"
                    }
                  </div>
                </Value>
              </div>
            </p.Stack>
          </EmojiValueProps>
          {true ? (
            <section
              className={classNames(projectcss.all, sty.section___0T99S)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"container6"}
                  data-plasmic-override={overrides.container6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.container6)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fLqri)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xn7Vx
                      )}
                    >
                      {"Categories"}
                    </div>
                    <Button
                      className={classNames("__wab_instance", sty.button__omGu)}
                      states={"active" as const}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__la28I
                        )}
                      >
                        {"All"}
                      </div>
                    </Button>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__dqs6D
                      )}
                      submitsForm={true}
                    >
                      {"New"}
                    </Button>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__guZ4O
                      )}
                      submitsForm={true}
                    >
                      {"Womens"}
                    </Button>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lrdUp
                      )}
                      submitsForm={true}
                    >
                      {"Mens"}
                    </Button>
                    <Button
                      className={classNames("__wab_instance", sty.button__ulud)}
                      submitsForm={true}
                    >
                      {"Kids"}
                    </Button>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__uxTnO
                      )}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lpHn3
                        )}
                      >
                        {"On sale"}
                      </div>
                    </Button>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gzWep)}
                  >
                    <ProductCard
                      data-plasmic-name={"productCard13"}
                      data-plasmic-override={overrides.productCard13}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard13
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe8.png",
                        fullWidth: 864,
                        fullHeight: 1080,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard13",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h8I8S
                        )}
                      >
                        {"Nike Air Zoom Pegasus 38 Limited Edition"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__omZ3Q
                        )}
                      >
                        {"Women's Running Shoe"}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard14"}
                      data-plasmic-override={overrides.productCard14}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard14
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe7.png",
                        fullWidth: 840,
                        fullHeight: 840,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard14",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___61WjO
                        )}
                      >
                        {"NMD_R1 SHOES"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bdAsY
                        )}
                      >
                        {
                          "Continue the NMD legacy in these adidas NMD_R1 Shoes."
                        }
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard15"}
                      data-plasmic-override={overrides.productCard15}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard15
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe6.png",
                        fullWidth: 320,
                        fullHeight: 320,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard15",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aZ9Y
                        )}
                      >
                        {"Question Low Men's Basketball Shoes"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sOjiU
                        )}
                      >
                        {"Lace up fierce baller style."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard16"}
                      data-plasmic-override={overrides.productCard16}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard16
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe5.png",
                        fullWidth: 2000,
                        fullHeight: 2000,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard16",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zeeNz
                        )}
                      >
                        {"Cali Women's Sneakers"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ooErx
                        )}
                      >
                        {"A sport style turned street classic."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard17"}
                      data-plasmic-override={overrides.productCard17}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard17
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe4.png",
                        fullWidth: 1024,
                        fullHeight: 768,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard17",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5QhPa
                        )}
                      >
                        {"MAGIC SPEED"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ayoRy
                        )}
                      >
                        {"mMade for racing or regular training runs."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard18"}
                      data-plasmic-override={overrides.productCard18}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard18
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe3.png",
                        fullWidth: 964,
                        fullHeight: 898,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard18",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eBbxq
                        )}
                      >
                        {"Pride Chuck Taylor All Star"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h1Oce
                        )}
                      >
                        {"If you can dream it, you can build it."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard19"}
                      data-plasmic-override={overrides.productCard19}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard19
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe2.png",
                        fullWidth: 864,
                        fullHeight: 1080,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard19",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fhdUp
                        )}
                      >
                        {"Nike Air Zoom Pegasus 38"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s5Bo
                        )}
                      >
                        {"Your workhorse with wings returns."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard20"}
                      data-plasmic-override={overrides.productCard20}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard20
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe9.png",
                        fullWidth: 1024,
                        fullHeight: 768,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard20",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__urohJ
                        )}
                      >
                        {"GEL-Nimbus 22 Retro Tokyo"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___425Li
                        )}
                      >
                        {"Enjoy comfort with each stride."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard21"}
                      data-plasmic-override={overrides.productCard21}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard21
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe10.png",
                        fullWidth: 964,
                        fullHeight: 898,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard21",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eqwJb
                        )}
                      >
                        {"A Bug's World Chuck Taylor All Star"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xjo5L
                        )}
                      >
                        {"Allover glow-in-the-dark bug prints."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard22"}
                      data-plasmic-override={overrides.productCard22}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard22
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe11.png",
                        fullWidth: 766,
                        fullHeight: 766,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard22",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bkE
                        )}
                      >
                        {"NMD_R1 SHOES"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nTd3D
                        )}
                      >
                        {
                          "Effortlessly step up your look than a pop of animal print."
                        }
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard23"}
                      data-plasmic-override={overrides.productCard23}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard23
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe12.png",
                        fullWidth: 2000,
                        fullHeight: 2000,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard23",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___67Y4Y
                        )}
                      >
                        {"Suede Teams Little Kids' Shoes"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dUs3B
                        )}
                      >
                        {"Worn by the icons of every generation."}
                      </div>
                    </ProductCard>
                    <ProductCard
                      data-plasmic-name={"productCard24"}
                      data-plasmic-override={overrides.productCard24}
                      className={classNames(
                        "__wab_instance",
                        sty.productCard24
                      )}
                      img={{
                        src: "/plasmic/chipsia/images/shoe13.png",
                        fullWidth: 840,
                        fullHeight: 840,
                        aspectRatio: undefined
                      }}
                      onEntryidvarChange={p.generateStateOnChangeProp($state, [
                        "productCard24",
                        "entryidvar"
                      ])}
                      small={true}
                      tags={
                        <Button
                          colors={"lightGray" as const}
                          size={"small" as const}
                          submitsForm={true}
                        >
                          {"New"}
                        </Button>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__imC18
                        )}
                      >
                        {"SUPERSTAR 360 PRIMEBLUE SANDALS"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8W6CR
                        )}
                      >
                        {"Your workhorse with wings returns."}
                      </div>
                    </ProductCard>
                  </p.Stack>
                </p.Stack>
              ) : null}
            </section>
          ) : null}
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </main>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "container4",
    "h1",
    "container",
    "productCard",
    "productCard2",
    "h2",
    "link",
    "emojiValueProps",
    "columns",
    "container6",
    "productCard13",
    "productCard14",
    "productCard15",
    "productCard16",
    "productCard17",
    "productCard18",
    "productCard19",
    "productCard20",
    "productCard21",
    "productCard22",
    "productCard23",
    "productCard24",
    "footer"
  ],
  navBar: ["navBar"],
  container4: ["container4", "h1"],
  h1: ["h1"],
  container: ["container", "productCard", "productCard2", "h2", "link"],
  productCard: ["productCard"],
  productCard2: ["productCard2"],
  h2: ["h2"],
  link: ["link"],
  emojiValueProps: ["emojiValueProps", "columns"],
  columns: ["columns"],
  container6: [
    "container6",
    "productCard13",
    "productCard14",
    "productCard15",
    "productCard16",
    "productCard17",
    "productCard18",
    "productCard19",
    "productCard20",
    "productCard21",
    "productCard22",
    "productCard23",
    "productCard24"
  ],
  productCard13: ["productCard13"],
  productCard14: ["productCard14"],
  productCard15: ["productCard15"],
  productCard16: ["productCard16"],
  productCard17: ["productCard17"],
  productCard18: ["productCard18"],
  productCard19: ["productCard19"],
  productCard20: ["productCard20"],
  productCard21: ["productCard21"],
  productCard22: ["productCard22"],
  productCard23: ["productCard23"],
  productCard24: ["productCard24"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "main";
  navBar: typeof NavBar;
  container4: "div";
  h1: "h1";
  container: "div";
  productCard: typeof ProductCard;
  productCard2: typeof ProductCard;
  h2: "h2";
  link: "a";
  emojiValueProps: typeof EmojiValueProps;
  columns: "div";
  container6: "div";
  productCard13: typeof ProductCard;
  productCard14: typeof ProductCard;
  productCard15: typeof ProductCard;
  productCard16: typeof ProductCard;
  productCard17: typeof ProductCard;
  productCard18: typeof ProductCard;
  productCard19: typeof ProductCard;
  productCard20: typeof ProductCard;
  productCard21: typeof ProductCard;
  productCard22: typeof ProductCard;
  productCard23: typeof ProductCard;
  productCard24: typeof ProductCard;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicWhyImportChipsFromChipsia__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicWhyImportChipsFromChipsia__VariantsArgs;
    args?: PlasmicWhyImportChipsFromChipsia__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicWhyImportChipsFromChipsia__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicWhyImportChipsFromChipsia__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicWhyImportChipsFromChipsia__ArgProps,
          internalVariantPropNames:
            PlasmicWhyImportChipsFromChipsia__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicWhyImportChipsFromChipsia__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicWhyImportChipsFromChipsia";
  } else {
    func.displayName = `PlasmicWhyImportChipsFromChipsia.${nodeName}`;
  }
  return func;
}

export const PlasmicWhyImportChipsFromChipsia = Object.assign(
  // Top-level PlasmicWhyImportChipsFromChipsia renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    container4: makeNodeComponent("container4"),
    h1: makeNodeComponent("h1"),
    container: makeNodeComponent("container"),
    productCard: makeNodeComponent("productCard"),
    productCard2: makeNodeComponent("productCard2"),
    h2: makeNodeComponent("h2"),
    link: makeNodeComponent("link"),
    emojiValueProps: makeNodeComponent("emojiValueProps"),
    columns: makeNodeComponent("columns"),
    container6: makeNodeComponent("container6"),
    productCard13: makeNodeComponent("productCard13"),
    productCard14: makeNodeComponent("productCard14"),
    productCard15: makeNodeComponent("productCard15"),
    productCard16: makeNodeComponent("productCard16"),
    productCard17: makeNodeComponent("productCard17"),
    productCard18: makeNodeComponent("productCard18"),
    productCard19: makeNodeComponent("productCard19"),
    productCard20: makeNodeComponent("productCard20"),
    productCard21: makeNodeComponent("productCard21"),
    productCard22: makeNodeComponent("productCard22"),
    productCard23: makeNodeComponent("productCard23"),
    productCard24: makeNodeComponent("productCard24"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicWhyImportChipsFromChipsia
    internalVariantProps: PlasmicWhyImportChipsFromChipsia__VariantProps,
    internalArgProps: PlasmicWhyImportChipsFromChipsia__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Why Choose Chipsia Indonesian Chips Products ",
      description:
        "Here's Reasons why to choose  us when you look for indonesian Chips and snacks supplier",
      ogImageSrc:
        "https://site-assets.plasmic.app/54f3ce18d37d548646a3665708ddddc8.jpg",
      canonical: "https://chipsia.com/product/why-choose-chipsia"
    }
  }
);

export default PlasmicWhyImportChipsFromChipsia;
/* prettier-ignore-end */
